package Abbah.Ahmed;
import java.io.IOException;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.cfg.Configuration;



@WebServlet("/login")
public class LoginServlet extends HttpServlet {
    private static final long serialVersionUID = 1L;

    private SessionFactory sessionFactory;

    public void init() throws ServletException {
        sessionFactory = new Configuration().configure().buildSessionFactory();
    }

    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {

        String username = request.getParameter("username");
        String password = request.getParameter("password");

        // Retrieve the user from the database
        Session session = sessionFactory.openSession();
        Client client = session.createQuery("FROM Client WHERE email = :username AND mot_de_passe = :password", Client.class)
                .setParameter("username", username)
                .setParameter("password", password)
                .uniqueResult();
        session.close();

        if (client != null) {
        	
            // Set the user object as a session attribute for future use
            request.getSession().setAttribute("user", client);
if(client.getIsAdmin()==1) {
        		
        	}
            // Redirect to the home page or any other authorized page
            response.sendRedirect(request.getContextPath() + "/Admin/AdminPanel.jsp");
        } else {
            // Display an error message and redirect back to the login page
        	 request.setAttribute("errorMessage", "Invalid email or password. Please try again.");
            request.getRequestDispatcher("/login.jsp").forward(request, response);
        }
    }

    public void destroy() {
        sessionFactory.close();
    }
}
